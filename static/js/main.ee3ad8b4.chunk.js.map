{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","originalEditorRef","useRef","transEditorRef","useState","content","setContent","result","setResult","className","ref","setContents","onChange","onClick","text","cheerio","load","$","eq","split","forEach","txt","idx","includes","time1","substr","indexOf","temp","timeNicknameCont","push","join","style","margin","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yOAqDeA,MA/Cf,WACE,IAAMC,EAAoBC,mBACpBC,EAAiBD,mBAFV,EAGiBE,mBAAS,IAH1B,mBAGNC,EAHM,KAGGC,EAHH,OAIeF,mBAAS,IAJxB,mBAING,EAJM,KAIEC,EAJF,KAiCb,OACI,sBAAKC,UAAU,MAAf,UACE,qDACA,cAAC,IAAD,CAAWC,IAAKT,EACLU,YAAaN,EACbO,SAhCY,SAACP,GAC5BC,EAAWD,MAgCP,wBAAQQ,QA7Ba,WACzB,IAEMC,EAFIC,IAAQC,KAAKX,EAEVY,CAAE,KAAKC,GAAG,GAAGJ,OAAOK,MAAM,MAEjCZ,EAAS,GAEfO,EAAKM,SAAQ,SAACC,EAAKC,GACjB,GAAID,EAAIE,SAAS,KAAM,CACrB,IAAMC,EAAQH,EAAII,OAAO,EAAGJ,EAAIK,QAAQ,KAAO,GACzCC,EAAON,EAAII,OAAOJ,EAAIK,QAAQ,KAAO,GAIrCE,EAAmBJ,EAHXG,EAAKF,OAAO,EAAGE,EAAKD,QAAQ,KAAO,GAGP,WAF7BC,EAAKF,OAAOE,EAAKD,QAAQ,KAAO,GAI7CnB,EAAOsB,KAAP,aAAkBD,EAAlB,aAIJpB,EAAUD,EAAOuB,KAAK,MASmBC,MAAO,CAACC,OAAQ,QAArD,oBACA,cAAC,IAAD,CAAWtB,IAAKP,EACLQ,YAAaJ,EACbK,SAAU,SAAAP,GAAO,OAAIG,EAAUH,UCpCnC4B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.ee3ad8b4.chunk.js","sourcesContent":["import React, {useRef, useState} from 'react';\nimport './App.css';\nimport SunEditor from 'suneditor-react';\nimport 'suneditor/dist/css/suneditor.min.css';\nimport cheerio from \"cheerio\";\n\nfunction App() {\n  const originalEditorRef = useRef();\n  const transEditorRef = useRef();\n  const [content, setContent] = useState('');\n  const [result, setResult] = useState('');\n\n  const handleOnChangeEditor = (content) => {\n    setContent(content);\n  }\n\n  const handleOnTransClick = () => {\n    const $ = cheerio.load(content);\n\n    const text = $('p').eq(0).text().split('\\n');\n\n    const result = [];\n\n    text.forEach((txt, idx) => {\n      if (txt.includes(',')) {\n        const time1 = txt.substr(0, txt.indexOf(':') + 1);\n        const temp = txt.substr(txt.indexOf(':') + 1);\n        const time2 = temp.substr(0, temp.indexOf(':') - 1);\n        const cont = temp.substr(temp.indexOf(':') + 2);\n\n        const timeNicknameCont = time1 +  time2 + ' <br/>\\n' + cont;\n\n        result.push(`<p>${timeNicknameCont}</p>`);\n      }\n    });\n\n    setResult(result.join(''))\n  }\n\n  return (\n      <div className=\"App\">\n        <p> Copy & Paste Here! </p>\n        <SunEditor ref={originalEditorRef}\n                   setContents={content}\n                   onChange={handleOnChangeEditor} />\n        <button onClick={handleOnTransClick} style={{margin: '10px'}}>Trans!</button>\n        <SunEditor ref={transEditorRef}\n                   setContents={result}\n                   onChange={content => setResult(content)}/>\n      </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}