{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["downloadFile","txt","element","document","createElement","file","Blob","type","href","URL","createObjectURL","download","Date","getTime","body","appendChild","click","App","originalEditorRef","useRef","transEditorRef","useState","content","setContent","result","setResult","className","ref","setContents","onChange","onClick","text","cheerio","load","$","eq","split","exec","forEach","idx","time1","substr","indexOf","temp","time2","cont","timeNicknameCont","push","length","replace","join","trans1","trans2","style","margin","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.20b7ace5.chunk.js","sourcesContent":["import React, {useRef, useState} from 'react';\nimport './App.css';\nimport SunEditor from 'suneditor-react';\nimport 'suneditor/dist/css/suneditor.min.css';\nimport cheerio from \"cheerio\";\n\nconst downloadFile = (txt) => {\n  const element = document.createElement(\"a\");\n  const file = new Blob([txt], {type: 'text/html'});\n  element.href = URL.createObjectURL(file);\n  element.download = `kakao-${new Date().getTime()}.html`;\n  document.body.appendChild(element);\n  element.click();\n}\n\nfunction App() {\n  const originalEditorRef = useRef();\n  const transEditorRef = useRef();\n  const [content, setContent] = useState('');\n  const [result, setResult] = useState('');\n\n  const handleOnChangeEditor = (content) => {\n    setContent(content);\n  }\n\n  const trans1 = () => {\n    const $ = cheerio.load(content);\n\n    const text = $('p').eq(0).text().split('\\n');\n\n    const result = [];\n\n    text.forEach((txt, idx) => {\n      const textRegex = /[\\d]{4}년 [\\d]{1,2}월 [\\d]{1,2}일 [오전|오후]* [\\d]{1,2}:[\\d]{1,2}, (.)*:/g;\n      const dateRegex = /[\\d]{4}년 [\\d]{1,2}월 [\\d]{1,2}일 [오전|오후]* [\\d]{1,2}:[\\d]{1,2}/g;\n      const joinRegex = /[\\d]{4}년 [\\d]{1,2}월 [\\d]{1,2}일 [오전|오후]* [\\d]{1,2}:[\\d]{1,2},/g;\n\n      const test = textRegex.exec(txt);\n\n      if (test) {\n        const time1 = txt.substr(0, txt.indexOf(':') + 1);\n        const temp = txt.substr(txt.indexOf(':') + 1);\n        const time2 = temp.substr(0, temp.indexOf(':') - 1);\n        let cont = temp.substr(temp.indexOf(':') + 2);\n\n        if (cont.indexOf('<사진 읽지 않음>') >= 0) {\n          cont = '[사진 읽지 않음]';\n        }\n\n        const timeNicknameCont = `<mark class=\"highlight-gray\">${time1}${time2}</mark> <br/>${cont}`;\n\n        result.push(`<p>${timeNicknameCont}</p>`);\n      } else {\n        if (!joinRegex.exec(txt)) {\n          if (!dateRegex.exec(txt)) {\n            result[result.length - 1] = result[result.length - 1].replace('</p>', `<br />${txt}</p>`)\n          }\n        }\n      }\n    });\n\n    setResult(result.join(''))\n    downloadFile(result.join(''))\n  }\n\n  const trans2 = () => {\n    const $ = cheerio.load(content);\n\n    const text = $('p').eq(0).text().split('\\n');\n\n    const result = [];\n\n    text.forEach((txt, idx) => {\n      const textRegex = /[\\d]{1,2}\\/[\\d]{1,2}\\/[\\d]{4} [\\d]{1,2}:[\\d]{1,2}, (.)*:/g;\n      const dateRegex = /[\\d]{1,2}\\/[\\d]{1,2}\\/[\\d]{4} [\\d]{1,2}:[\\d]{1,2}/g;\n      const joinRegex = /[\\d]{1,2}\\/[\\d]{1,2}\\/[\\d]{4} [\\d]{1,2}:[\\d]{1,2},/g;\n\n      const test = textRegex.exec(txt);\n\n      if (test) {\n        const time1 = txt.substr(0, txt.indexOf(':') + 1);\n        const temp = txt.substr(txt.indexOf(':') + 1);\n        const time2 = temp.substr(0, temp.indexOf(':') - 1);\n        const cont = temp.substr(temp.indexOf(':') + 2);\n\n        const timeNicknameCont = time1 +  time2 + ' <br/>' + cont;\n\n        result.push(`<p>${timeNicknameCont}</p>`);\n      } else {\n        if (!joinRegex.exec(txt)) {\n          if (!dateRegex.exec(txt)) {\n            result[result.length - 1] = result[result.length - 1].replace('</p>', `<br />${txt}</p>`)\n          }\n        }\n      }\n    });\n\n    setResult(result.join(''))\n    downloadFile(result.join(''))\n  }\n\n  const handleOnTransClick = () => {\n    const $ = cheerio.load(content);\n    const text = $('p').eq(0).text().split('\\n');\n\n    const dateRegex = /[\\d]{4}년 [\\d]{1,2}월 [\\d]{1,2}일 [오전|오후]* [\\d]{1,2}:[\\d]{1,2}/g;\n\n    if (dateRegex.exec(text[0])) {\n      trans1();\n    } else {\n      trans2();\n    }\n  }\n\n  return (\n      <div className=\"App\">\n        <p> Copy & Paste Here! </p>\n        <SunEditor ref={originalEditorRef}\n                   setContents={content}\n                   onChange={handleOnChangeEditor} />\n        <button onClick={handleOnTransClick} style={{margin: '10px'}}>Trans!</button>\n        <SunEditor ref={transEditorRef}\n                   setContents={result}\n                   onChange={content => setResult(content)}/>\n      </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}